/*
 * This file is apart of Beaver Mod <https://github.com/Beaver-Mod/Beaver-Mod>
 * Copyright (C) 2024  Beaver Fan Club
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://repo.spongepowered.org/repository/maven-public"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${project.forge_version}"
        classpath "org.spongepowered:mixingradle:${project.mixin_version}"
        classpath "com.github.jengelman.gradle.plugins:shadow:${project.shadow_version}"
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "java"

version = "1.2"
group = "keystrokesmod"
archivesBaseName = "Beaver-Mod"

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding 'UTF-8'
}

minecraft {
    version = "${project.minecraft_version}"
    runDir = "run"

    mappings = "${project.minecraft_mappings}"

    makeObfSourceJar = false
    clientJvmArgs += '-Dfml.coreMods.load=me.beaverfanclub.beavermod.mixin.MixinLoader'
}

mixin {
    defaultObfuscationEnv searge
    sourceSets {
        main {
            ext.refMap = 'mixins.beaver.refmap.json'
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spongepowered.org/maven'
    }
}

configurations {
    library
    compile.extendsFrom library
}

dependencies {
    library "org.reflections:reflections:${project.reflections_version}"
    library("org.spongepowered:mixin:${project.mixin_version}") {
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'jarjar'
        exclude module: 'commons-codec'
        exclude module: 'commons-io'
        exclude module: 'launchwrapper'
        exclude module: 'asm-commons'
        exclude module: 'slf4j-api'
    }

    library "org.luaj:luaj-jse:${project.luaj_version}"

    // JetBrains static analysis :D
    implementation "org.jetbrains:annotations:${project.annotations_version}"
}

jar {
    from(configurations.library.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude 'LICENSE.txt',
                'org/slf4j/**',
                'META-INF/maven/**'
    }

    manifest {
        attributes(
                'MixinConfigs': 'mixins.beaver.json',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                "FMLCorePlugin": "me.beaverfanclub.beavermod.mixin.MixinLoader",
                "ForceLoadAsMod": true,
                'FMLCorePluginContainsFMLMod': true,
                "ModSide": "CLIENT"
        )
    }
}

processResources
{

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version


    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version":project.version, "mcversion":project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
